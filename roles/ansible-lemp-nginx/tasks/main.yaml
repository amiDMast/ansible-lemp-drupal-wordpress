---
- name: remove Apache web server
  package: name=apache2 state=absent
 
- name: install nginx web server
  package: name=nginx state=present


- block: # if lets_gen == true 
   - name: Set Certbot package name and versions (Ubuntu >= 20.04)
     set_fact:
       certbot_version: 0.40.0-1
       certbot_nginx_version: 0.40.0-0ubuntu0.1
       certbot_nginx_name: python3-certbot-nginx
     when: ansible_distribution_version >= "20.04"

   - name: Set Certbot package name and versions (Ubuntu < 20.04)
     set_fact:
       certbot_version: 0.31.0-1+ubuntu{{ ansible_distribution_version }}.1+certbot+1
       certbot_nginx_version: 0.31.0-1+ubuntu{{ ansible_distribution_version }}.1+certbot+1
       certbot_nginx_name: python-certbot-nginx
     when: ansible_distribution_version < "20.04"

   - name: Add certbot repository
     apt_repository:
       repo: 'ppa:certbot/certbot'
       state: present
     when: ansible_distribution_version < "20.04"

   - name: Install certbot
     package:
       name: "certbot={{ certbot_version }}"
       state: present

   - name: Install certbot-nginx plugin
     package:
       name: "{{ certbot_nginx_name }}={{ certbot_nginx_version }}"
       state: present
  
  when:
    - lets_gen == true
    - domain is defined
    - lets_email is defined


- name: start and enable nginx service
  service: name=nginx state=started enabled=yes

- name: generate letsencrypt certificates
  shell: certbot certonly --nginx -d {{ domain }} -n --agree-tos -m {{ lets_email }}
  args:
    creates: /etc/letsencrypt/live/{{ domain }}
  when:
    - lets_gen == true
    - domain is defined
    - lets_email is defined

- name: remove default nginx configuration
  file: name=/etc/nginx/sites-enabled/default state=absent
  notify:
    - restart nginx

- name: generate a new configuration for site
  template:
    src: vhost.conf.j2
    dest: /etc/nginx/sites-enabled/default.conf
    owner: www-data
    group: www-data
  notify:
    - restart nginx

- name: configure the certbot cronjob
  cron:
    name: letsencrypt renewal
    special_time: weekly
    job: /usr/bin/certbot renew --post-hook "nginx -s reload"
  when:
    - lets_gen == true
    - domain is defined
    - lets_email is defined

- meta: flush_handlers
